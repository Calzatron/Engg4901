\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces Flow diagram describing the key features of this thesis}}{4}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Motor Torque Control System}}{6}
\contentsline {figure}{\numberline {2.2}{\ignorespaces smrobot Simscape Model}}{7}
\contentsline {figure}{\numberline {2.3}{\ignorespaces smrobot Simscape Model Visualisation}}{8}
\contentsline {figure}{\numberline {2.4}{\ignorespaces Simulink Model of Motor Control Loop}}{8}
\contentsline {figure}{\numberline {2.5}{\ignorespaces Simulink Model of Motor Controllers}}{9}
\contentsline {figure}{\numberline {2.6}{\ignorespaces Flow Diagram of using Jacobian in Programming}}{12}
\contentsline {figure}{\numberline {2.7}{\ignorespaces Flow Diagram of the V-REP Simulation}}{14}
\contentsline {figure}{\numberline {2.8}{\ignorespaces Sample Lua Code for Connecting V-REP to a port}}{15}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Feedback Control System with Disturbance}}{23}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Physical representation of D-H Parameters between two links}}{26}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Revolute Joint Arm}}{29}
\contentsline {figure}{\numberline {3.4}{\ignorespaces The Newton-Raphson Method applied to Inverse Kinematics}}{35}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces The Jaco arm in V-REP with joints set to IK mode, with a small error in target to tip position}}{44}
\contentsline {figure}{\numberline {4.2}{\ignorespaces Left: the Jaco arm using the Pseudo Inverse Jacobian with 50 iterations. Right: the Jaco arm using DLS of damping 0.05 and 5 iterations}}{45}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces Dimensions and angles of Jaco Arm}}{50}
\contentsline {figure}{\numberline {5.2}{\ignorespaces Simplification of Jaco arm geometry}}{51}
\contentsline {figure}{\numberline {5.3}{\ignorespaces Simplification of Jaco arm wrist geometry}}{52}
\contentsline {figure}{\numberline {5.4}{\ignorespaces Control loop for approximating the joints angles to move the end-effector using the position of the fourth joint}}{54}
\contentsline {figure}{\numberline {5.5}{\ignorespaces Response of Chosen Controller Given a Change in End-Effector Position Command (3mm in the x-y plane)}}{55}
\contentsline {figure}{\numberline {5.6}{\ignorespaces Error being corrected in control loop}}{57}
\contentsline {figure}{\numberline {5.7}{\ignorespaces The desired and actual positions of the end-effector with each joint under control}}{58}
\contentsline {figure}{\numberline {5.8}{\ignorespaces The desired and actual angular positions of the end-effector}}{59}
\contentsline {figure}{\numberline {5.9}{\ignorespaces Standard Regulator Block Diagram}}{59}
\contentsline {figure}{\numberline {5.10}{\ignorespaces Block Diagram of integral action, giving the output (y) a reference input (r)}}{60}
\contentsline {figure}{\numberline {5.11}{\ignorespaces Block Diagram of a Standard Cascade Regulator}}{60}
\contentsline {figure}{\numberline {5.12}{\ignorespaces End-effector position after implemented control scheme }}{61}
\contentsline {figure}{\numberline {5.13}{\ignorespaces Starting position of the Jaco arm when giving IK inputs to a FK scene }}{64}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces Client Program on Start-Up }}{68}
\contentsline {figure}{\numberline {6.2}{\ignorespaces Client Program given incorrect arguments on start-up }}{69}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {A.1}{\ignorespaces Simple V-REP client program in Python Flow Chart}}{79}
\contentsline {figure}{\numberline {A.2}{\ignorespaces V-REP Client Makefile in Linux}}{80}
\contentsline {figure}{\numberline {A.3}{\ignorespaces Lua function in V-REP main script, returns object names for the Client Program}}{80}
\contentsline {figure}{\numberline {A.4}{\ignorespaces Example of a text file created by the V-REP client, containing the object handles and object names}}{81}
\contentsline {figure}{\numberline {A.5}{\ignorespaces Client program in Forward Kinematics mode Flow Chart}}{84}
\contentsline {figure}{\numberline {A.6}{\ignorespaces Classical D-H Parameters Diagram, showing each rotational axis of the Jaco arm \cite {specificationGuide}}}{85}
\contentsline {figure}{\numberline {A.7}{\ignorespaces An example of the terminal output of the joystick process when the left joystick is toggled on and off}}{85}
\contentsline {figure}{\numberline {A.8}{\ignorespaces The Inverse Kinematics settings in V-REP}}{86}
\contentsline {figure}{\numberline {A.9}{\ignorespaces V-REP Client Program Inverse Kinematics (mode 2) Control Loop Error}}{87}
\contentsline {figure}{\numberline {A.10}{\ignorespaces Plot of using Jacobian Approximation to move the end-effector to a desired position }}{88}
\contentsline {figure}{\numberline {A.11}{\ignorespaces The time taken to calculate the inverse kinematics with and without waiting threads }}{89}
\contentsline {figure}{\numberline {A.12}{\ignorespaces V-REP Client Program Inverse Kinematics (mode 2) Final Control Loop Coefficients - Change in Angles }}{89}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {D.1}{\ignorespaces Kinova Jaco 2 Documentation: Joint Lengths Sketch \cite {specificationGuide} }}{104}
\contentsline {figure}{\numberline {D.2}{\ignorespaces V-REP Client Program Inverse Kinematics (mode 2) Control Loop with High Steady State Error in Z - Higher XY gain}}{105}
\contentsline {figure}{\numberline {D.3}{\ignorespaces Simplified Client Software Diagram Pt1}}{106}
\contentsline {figure}{\numberline {D.4}{\ignorespaces Simplified Client Software Diagram Pt2}}{107}
